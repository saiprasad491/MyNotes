=======================Strings============================
import java.util.Scanner;

class StringBasic{
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    String s = sc.nextLine();
    System.out.println("Your name is "+s);

    String fn = "Saiprasad ",ln = "Sahoo";
    String fullName = fn.concat(ln);
    System.out.println(fullName+" "+fullName.length());
    for(int i=0;i<fullName.length();i++){
      System.out.println(fullName.charAt(i));
    }
    for(String ch: fullName.split("")){
      System.out.print(ch+" ");
    }

    //Use .compareTo() to compare two strings
    System.out.println("Sai".compareTo("sai"));
    System.out.println("Sai".compareTo("Sai"));
    System.out.println("A".compareTo("B"));

    
    System.out.println("Sai"=="sai");
    System.out.println("Sai"=="Sai");
    System.out.println("A"=="B");

    System.out.println("Saiprasad".substring(1)); //aiprasad
    System.out.println("Saiprasad".substring(1,4)); //aip

    //Strings are immutable in java.

    //StringBuilder
    StringBuilder sb = new StringBuilder("Sai");
    System.out.println(sb);

    System.out.println(sb.charAt(0));
    sb.setCharAt(0,'M');
    System.out.println(sb);

    sb.insert(3, "d");
    System.out.println(sb);

    sb.delete(1, 3);
    System.out.println(sb);

    sb.append('i');
    sb.append("io");
    System.out.println(sb);
    System.out.println(sb.length());

    //reverse a string
    String  str = "hello";
    StringBuilder str1 = new StringBuilder();
    int n=str.length();
    for(int i=0;i<n;i++){
      str1.append(str.charAt(n-i-1));
    }
    str = str1.toString();
    System.out.println(str);
    System.out.println(new StringBuilder("Saiprasad").reverse());

  }
}

===========Operators and Binary Numbers=====================
Operators are symbols that tell compiler to perform some operations
Arithmetic Operators:
  Binary +, -, *, /, %
  Unary ++, --
   ++a pre increment
   a++ post increment
   --a pre decrement
   a-- post decrement
Relational Operators
  ==, !=, >, <, >=, <=
Logical Operators
  &&, ||, !
Binary Number System (0s and 1s)
  Decimal to Binary
  Binary to Decimal
Bitwise Operators
  &,|,^,~
  <<,>>
Assignment Operators
  =,+=,-=,*=,/=
  a+=7; // a = a+7;

===========Bit Manipulation=====================
1. Get the 3rd bit (position = 2) of a number n. (n = 0101=5)
  int getBit(int n,int m){
    int bm = 1 << m;
    return ((n & bm) != 0)?1:0;
  }
2. Set the 2nd bit (position = 1) of a number n. (n = 0101=5)
  int setBit(int n,int m){
    int bm = 1 << m;
    return n|bm;
  }
3. Clear the 3rd bit (position = 2) of a number n. (n = 0101=5)
  int clearBit(int n,int m){
    int bm = 1 << m;
    return n&(~bm);
  }
4. update the 2nd bit (position = 1) of a number n. (n = 0101=5)
  int updateBit(int n,int m){
    int bm = 1 << m;
    int mth  = getBit(n, m);
    return (mth!=0)?clearBit(n, m):setBit(n, m);
  }



